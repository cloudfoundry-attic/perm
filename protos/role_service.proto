syntax = 'proto3';

package cloud_foundry.perm.protos;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "actor.proto";
import "group.proto";
import "permission.proto";
import "role.proto";

option go_package = "protos";
option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;

service RoleService {
  rpc CreateRole (CreateRoleRequest) returns (CreateRoleResponse);
  rpc DeleteRole (DeleteRoleRequest) returns (DeleteRoleResponse);
  rpc AssignRole (AssignRoleRequest) returns (AssignRoleResponse);
  rpc UnassignRole (UnassignRoleRequest) returns (UnassignRoleResponse);
  rpc HasRole (HasRoleRequest) returns (HasRoleResponse);
  rpc HasRoleForGroup (HasRoleForGroupRequest) returns (HasRoleForGroupResponse);
  rpc ListActorRoles (ListActorRolesRequest) returns (ListActorRolesResponse);
  rpc ListRolePermissions (ListRolePermissionsRequest) returns (ListRolePermissionsResponse);
}

message CreateRoleRequest {
  string name = 1;
  repeated Permission permissions = 2;
}

message CreateRoleResponse {
  Role role = 1;
}

message DeleteRoleRequest {
  string name = 1;
}

message DeleteRoleResponse {
}

message AssignRoleRequest {
  Actor actor = 1;
  string role_name = 2;
}

message AssignRoleResponse {
}

message AssignRoleToGroupRequest {
  Group group = 1;
  string role_name = 2;
}

message AssignRoleToGroupResponse {
}

message UnassignRoleRequest {
  Actor actor = 1;
  string role_name = 2;
}

message UnassignRoleResponse {
}

message HasRoleRequest {
  Actor actor = 1;
  string role_name = 2;
}

message HasRoleResponse {
  bool has_role = 1;
}

message HasRoleForGroupRequest {
  Group group = 1;
  string role_name = 2;
}

message HasRoleForGroupResponse {
  bool has_role = 1;
}

message ListActorRolesRequest {
  reserved 1; // for pagination

  Actor actor = 2;
}

message ListActorRolesResponse {
  reserved 1; // for pagination metadata

  repeated Role roles = 2;
}

message ListRolePermissionsRequest {
  reserved 1; // for pagination

  string role_name = 2;
}

message ListRolePermissionsResponse {
  reserved 1; // for pagination metadata

  repeated Permission permissions = 2;
}
